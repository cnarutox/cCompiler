/* Generated By:JavaCC: Do not edit this line. TempConstants.java */
package Try_Demo;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TempConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LINE_COMMIT = 6;
  /** RegularExpression Id. */
  int BLOCK_COMMIT = 9;
  /** RegularExpression Id. */
  int SEMIC = 10;
  /** RegularExpression Id. */
  int COLON = 11;
  /** RegularExpression Id. */
  int ASSIGN = 12;
  /** RegularExpression Id. */
  int LBR = 13;
  /** RegularExpression Id. */
  int RBR = 14;
  /** RegularExpression Id. */
  int COMMA = 15;
  /** RegularExpression Id. */
  int PLUS_SIGN = 16;
  /** RegularExpression Id. */
  int MINUS_SIGN = 17;
  /** RegularExpression Id. */
  int MULT_SIGN = 18;
  /** RegularExpression Id. */
  int DIV_SIGN = 19;
  /** RegularExpression Id. */
  int RCBR = 20;
  /** RegularExpression Id. */
  int LCBR = 21;
  /** RegularExpression Id. */
  int EXLM = 22;
  /** RegularExpression Id. */
  int QUESTION = 23;
  /** RegularExpression Id. */
  int PERCENT = 24;
  /** RegularExpression Id. */
  int EQUALS = 25;
  /** RegularExpression Id. */
  int NOT_EQUAL = 26;
  /** RegularExpression Id. */
  int LEFT_BRACE = 27;
  /** RegularExpression Id. */
  int RIGHT_BRACE = 28;
  /** RegularExpression Id. */
  int LEFT_BRACE_EQUAL = 29;
  /** RegularExpression Id. */
  int RIGHT_BRACE_EQUAL = 30;
  /** RegularExpression Id. */
  int DOT = 31;
  /** RegularExpression Id. */
  int AND = 32;
  /** RegularExpression Id. */
  int BOOL = 33;
  /** RegularExpression Id. */
  int CONST = 34;
  /** RegularExpression Id. */
  int DO = 35;
  /** RegularExpression Id. */
  int ELSE = 36;
  /** RegularExpression Id. */
  int FALSE = 37;
  /** RegularExpression Id. */
  int IF = 38;
  /** RegularExpression Id. */
  int INT = 39;
  /** RegularExpression Id. */
  int MAIN = 40;
  /** RegularExpression Id. */
  int NOT = 41;
  /** RegularExpression Id. */
  int OR = 42;
  /** RegularExpression Id. */
  int REAL = 43;
  /** RegularExpression Id. */
  int RETURN = 44;
  /** RegularExpression Id. */
  int STR = 45;
  /** RegularExpression Id. */
  int THEN = 46;
  /** RegularExpression Id. */
  int TRUE = 47;
  /** RegularExpression Id. */
  int VAR = 48;
  /** RegularExpression Id. */
  int VOID = 49;
  /** RegularExpression Id. */
  int CHAR = 50;
  /** RegularExpression Id. */
  int SHORT = 51;
  /** RegularExpression Id. */
  int LONG = 52;
  /** RegularExpression Id. */
  int WHILE = 53;
  /** RegularExpression Id. */
  int INCLUDE = 54;
  /** RegularExpression Id. */
  int MACRO = 55;
  /** RegularExpression Id. */
  int DEFINE = 56;
  /** RegularExpression Id. */
  int IDENTIFIER = 57;
  /** RegularExpression Id. */
  int INTEGER = 58;
  /** RegularExpression Id. */
  int STRING = 63;
  /** RegularExpression Id. */
  int OTHER = 64;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_BLOCK_COMMIT = 1;
  /** Lexical state. */
  int IN_STRING = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<LINE_COMMIT>",
    "\"/*\"",
    "<token of kind 8>",
    "\"*/\"",
    "\";\"",
    "\":\"",
    "\":=\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"}\"",
    "\"{\"",
    "\"!\"",
    "\"?\"",
    "\"%\"",
    "\"=\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\".\"",
    "\"and\"",
    "\"boolean\"",
    "\"constant\"",
    "\"do\"",
    "\"else\"",
    "\"false\"",
    "\"if\"",
    "\"int\"",
    "\"main\"",
    "\"not\"",
    "\"or\"",
    "\"real\"",
    "\"return\"",
    "\"string\"",
    "\"then\"",
    "\"true\"",
    "\"var\"",
    "\"void\"",
    "\"char\"",
    "\"short\"",
    "\"long\"",
    "\"while\"",
    "\"include\"",
    "\"#\"",
    "\"define\"",
    "<IDENTIFIER>",
    "<INTEGER>",
    "\"\\\"\"",
    "<token of kind 60>",
    "<token of kind 61>",
    "<token of kind 62>",
    "\"\\\"\"",
    "<OTHER>",
    "\"...\"",
  };

}
